graph {
  graph [layout=dot, bgcolor=black, splines=ortho]
  node [shape=tab, style=filled]
  edge [color=white]
  home [shape=house, fillcolor="#e7ebf1",
        label="C language"]

  syntax [fillcolor="#d0d7e3",
          label="Syntax"]
  compiler [fillcolor="#d0d7e3",
            label="Compiler"]
  home -- {syntax, compiler}

  comments [fillcolor="#b9c3d5",
            label="Comments"]
  syntax -- comments

  singlelinecomments [shape=note, fillcolor="#a2afc7",
                      label="// Single-line comments start with // - only available in C99 and later."]
  multilinecomments [fillcolor="#a2afc7",
                     label="/*\lMulti-line comments look like this. They work in C89 as well.\l*/\l"]
  comments -- {singlelinecomments, multilinecomments}

  trickcomments [shape=note, fillcolor="#8b9bb9",
                 label="/*\lMulti-line comment trick\lworked\l//*/"]
  multilinecomments -- trickcomments

  constants [fillcolor="#b9c3d5", label="Constants"]
  syntax -- constants

  macroconstants [shape=note, fillcolor="#a2afc7", label="#define DAYS_IN_YEAR 365"]
  enumconstants [shape=note, fillcolor="#a2afc7",
                 label="// Enumeration constants\lenum days {SUN = 1, MON, TUE, WED, THU, FRI, SAT};\l"]
  constants -- {macroconstants, enumconstants}

  import [fillcolor="#b9c3d5", label="Import header files"]
  syntax -- import

  importstandard [shape=note, fillcolor="#a2afc7",
                  label="// Import standard headers\l#include <stdlib.h>\l#include <stdio.h>\l#include <string.h>\l"]
  importyourown [shape=note, fillcolor="#a2afc7",
                 label="// For your own headers\l#include \"my_header.h\"\l"]
  import -- {importstandard, importyourown}

  functions [fillcolor="#b9c3d5", label="Functions"]
  syntax -- functions

  functiondeclaration [fillcolor="#a2afc7",
                       label="// Declare function signatures in advance in a .h file,\l// or at the top of your .c file.\lvoid function_1();\lint function_2(void);\l\l// Must declare a 'function prototype' before main() when functions occur after\l// your main() function.\lint add_two_ints(int x1, int x2); // function prototype\l"]
  functiondefinition [fillcolor="#a2afc7",
                      label="// Function declaration syntax:\l// <return type> <function name>(<args>)\l\lint add_two_ints(int x1, int x2) {\lreturn x1 + x2; // Use return to return a value\l}\l"]
  functions -- {functiondeclaration, functiondefinition}
}
